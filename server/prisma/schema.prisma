generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String            @id @default(cuid())
  username       String            @unique
  passwordHash   String
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt

  sentMessages   Message[]         @relation("SentMessages")
  chatParticipants ChatParticipant[]
}

model Chat {
  id           String            @id @default(cuid())
  title        String?
  metadata     Json?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt

  messages     Message[]
  participants ChatParticipant[]
}

model ChatParticipant {
  id     String @id @default(cuid())
  userId String
  chatId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@unique([userId, chatId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())

  senderId  String
  chatId    String

  sender User @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  chat   Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  // 👇 --- DODANE ---
  // Relacja wskazująca, że wiadomość może mieć wiele załączników.
  attachments Attachment[]
}

// 👇 --- DODANY CAŁY MODEL ---
// Reprezentuje pojedynczy plik załączony do wiadomości.
model Attachment {
  id        String   @id @default(cuid())
  url       String   // URL do pliku w chmurze (np. AWS S3)
  filename  String   // Oryginalna nazwa pliku
  mimetype  String   // Typ MIME, np. "image/png" czy "application/pdf"
  size      Int      // Rozmiar pliku w bajtach
  createdAt DateTime @default(now())

  // Relacja zwrotna do wiadomości
  messageId String
  message   Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)
}